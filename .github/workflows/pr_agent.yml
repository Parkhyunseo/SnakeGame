name: PR-Agent (Windows self-hosted + Ollama EXAONE)

on:
  pull_request:
    types: [opened, reopened, ready_for_review, synchronize]
  issue_comment:
    types: [created, edited]

jobs:
  pr_agent:
    runs-on: [self-hosted, Windows]
    # PR 이벤트 or PR에 달린 코멘트면 실행 (명령어 여부는 내부에서 판단)
    if: github.event_name == 'pull_request' || (github.event_name == 'issue_comment' && github.event.issue.pull_request)

    defaults:
      run:
        shell: powershell
    permissions:
      issues: write
      pull-requests: write
      contents: write

    steps:
      - uses: actions/checkout@v4

      # 0) PR 컨텍스트/커맨드 파싱 (코멘드가 아니면 'skip'으로 설정)
      - name: Set PR context & parse slash command
        env:
          REPO:        ${{ github.repository }}
          EVT:         ${{ github.event_name }}
          PR_NUM_PR:   ${{ github.event.pull_request.number }}
          PR_NUM_CM:   ${{ github.event.issue.number }}
          CMDBODY:     ${{ github.event.comment.body }}
        run: |
          # PR 번호/URL
          $repo = "$Env:REPO"
          $evt  = "$Env:EVT"
          $prNum = if ($evt -eq 'pull_request') { $Env:PR_NUM_PR } else { $Env:PR_NUM_CM }
          if ([string]::IsNullOrEmpty($prNum)) { throw "PR number not found for event $evt" }
          "PR_NUMBER=$prNum"           | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          "PR_URL=https://github.com/$repo/pull/$prNum" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          # 기본값: PR 이벤트면 review, 코멘트 이벤트면 'skip'
          $cmd = if ($evt -eq 'pull_request') { 'review' } else { 'skip' }
          $arg = $null
          
          if ($evt -eq 'issue_comment') {
            # PowerShell 5 호환: ?? 대신 null 체크로 처리
            $body = $Env:CMDBODY
            if ($null -eq $body) { $body = "" }
            $body = $body -replace "`r","" -replace "`n"," "
            $body = $body.Trim()

            if ($body -match '^\s*/([a-zA-Z_]+)\s*(.*)$') {
              $cmdRaw = $matches[1].ToLower()
              $rest   = $matches[2].Trim()

              switch ($cmdRaw) {
                'review'            { $cmd = 'review' }
                'describe'          { $cmd = 'describe' }
                'description'       { $cmd = 'describe' }  # 별칭
                'improve'           { $cmd = 'improve' }
                'ask'               {
                                       $cmd = 'ask'
                                       $arg = $rest
                                       if ($arg.StartsWith('"') -and $arg.EndsWith('"')) {
                                         $arg = $arg.Substring(1, $arg.Length - 2)
                                       }
                                     }
                'update_changelog'  { $cmd = 'update_changelog' }
                'help_docs'         {
                                       $cmd = 'help_docs'
                                       $arg = $rest
                                       if ($arg.StartsWith('"') -and $arg.EndsWith('"')) {
                                         $arg = $arg.Substring(1, $arg.Length - 2)
                                       }
                                     }
                default             { $cmd = 'skip' }
              }
            }
          }

          "PR_AGENT_COMMAND=$cmd" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          if ($null -ne $arg -and $arg -ne "") {
            "PR_AGENT_ARG=$arg" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          }

          Write-Host "Resolved PR_URL=$($env:PR_URL)"
          Write-Host "Resolved PR_AGENT_COMMAND=$cmd"
          if ($null -ne $arg -and $arg -ne "") {
            Write-Host "Resolved PR_AGENT_ARG=$arg"
          }

      # 1) Ollama 확인 + EXAONE 준비 (이미 있으면 빠르게 통과)
      - name: Ensure Ollama (reviewOllama) is running
        run: |
          $running = docker ps --format '{{.Names}}' | Select-String -Pattern '^reviewOllama$'
          if (-not $running) {
            $exists = docker ps -a --format '{{.Names}}' | Select-String -Pattern '^reviewOllama$'
            if (-not $exists) {
              docker run -d --name reviewOllama --restart unless-stopped `
                -p 11434:11434 `
                -e OLLAMA_CONTEXT_LENGTH=8000 `
                -v ollama_models:/root/.ollama `
                ollama/ollama:latest | Out-Null
            } else {
              docker start reviewOllama | Out-Null
            }
          }
          Invoke-RestMethod http://localhost:11434/api/tags -Method GET | Out-File -FilePath $env:GITHUB_STEP_SUMMARY -Append

      - name: Pull EXAONE 3.5 model (first time only)
        run: |
          Invoke-RestMethod http://localhost:11434/api/pull -Method POST -ContentType 'application/json' `
            -Body '{"name":"exaone3.5:7.8b"}' | Out-Null
          $ok = $false
          for ($i=0; $i -lt 60; $i++) {
            try {
              $resp = Invoke-RestMethod http://localhost:11434/api/tags -Method GET
              if ($resp.models.name -contains 'exaone3.5:7.8b') { $ok = $true; break }
            } catch {}
            Start-Sleep 5
          }
          if (-not $ok) { throw "exaone3.5:7.8b 모델 준비 실패" }

      # 2) (선택) 컨테이너->호스트 헬스 체크
      - name: Smoke test (container -> host.docker.internal)
        run: docker run --rm curlimages/curl -fsS http://host.docker.internal:11434/api/tags

      # 3) 명령이 없으면 스킵
      - name: Skip if not a supported slash command
        if: env.PR_AGENT_COMMAND == 'skip'
        run: echo "No supported slash command. Skipping."

      # 4) PR-Agent 실행 (review/describe/improve/ask/update_changelog/help_docs 공용)
      - name: Run PR-Agent (${{ env.PR_AGENT_COMMAND }})
        if: env.PR_AGENT_COMMAND != 'skip'
        env:
          # 한국어 고정
          CONFIG__RESPONSE_LANGUAGE: ko-KR
          PR_REVIEWER__LANGUAGE: ko
          # Ollama(호스트) + 모델/토큰/폴백
          OLLAMA__API_BASE: http://host.docker.internal:11434
          CONFIG__ACTIVE_PROVIDER: ollama
          CONFIG__MODEL: ollama/exaone3.5:7.8b
          CONFIG__CUSTOM_MODEL_MAX_TOKENS: 8000
          CONFIG__FALLBACK_MODELS: "[]"
          CONFIG__LOG_LEVEL: DEBUG
          # GitHub 권한
          GITHUB__USER_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # (옵션) help_docs 기본 경로 바꾸려면 주석 해제
          # PR_HELP_DOCS__DOCS_PATH: docs
        run: |
          $args = @("run","--rm")
          $envs = @(
            "OLLAMA__API_BASE=$($Env:OLLAMA__API_BASE)",
            "CONFIG__ACTIVE_PROVIDER=$($Env:CONFIG__ACTIVE_PROVIDER)",
            "CONFIG__MODEL=$($Env:CONFIG__MODEL)",
            "CONFIG__CUSTOM_MODEL_MAX_TOKENS=$($Env:CONFIG__CUSTOM_MODEL_MAX_TOKENS)",
            "CONFIG__FALLBACK_MODELS=$($Env:CONFIG__FALLBACK_MODELS)",
            "CONFIG__RESPONSE_LANGUAGE=$($Env:CONFIG__RESPONSE_LANGUAGE)",
            "PR_REVIEWER__LANGUAGE=$($Env:PR_REVIEWER__LANGUAGE)",
            "CONFIG__LOG_LEVEL=$($Env:CONFIG__LOG_LEVEL)",
            "GITHUB__USER_TOKEN=$($Env:GITHUB__USER_TOKEN)"
          )
          foreach ($e in $envs) { $args += @("-e",$e) }

          $args += @("codiumai/pr-agent:latest","--pr_url","$Env:PR_URL","$Env:PR_AGENT_COMMAND")
          if ($Env:PR_AGENT_ARG) { $args += @("$Env:PR_AGENT_ARG") }

          Write-Host ">>> docker @args"
          & docker @args
